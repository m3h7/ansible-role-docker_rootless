---
# Docker Installation
# Docker rootless: https://docs.docker.com/engine/security/rootless/

- name: "Get Docker user from passwd: {{ docker_rootless_user }}"
  ansible.builtin.getent:
    database: passwd
    key: "{{ docker_rootless_user }}"
    split: ":"

- name: "Get name of users group"
  ansible.builtin.getent:
    database: group
    key: "{{ ansible_facts.getent_passwd[docker_rootless_user][2] }}"
    split: ":"

- name: Setting user's facts
  ansible.builtin.set_fact:
    fact_docker_rootless_user:
      name: "{{ docker_rootless_user }}"
      group: "{{ ansible_facts.getent_group | first }}"
      home: "{{ ansible_facts.getent_passwd[docker_rootless_user][4] }}"

- name: Install Required Packages
  ansible.builtin.apt:
    name:
      - gnupg2
      - uidmap
      - python3-docker
      - fuse-overlayfs
      - slirp4netns
    update_cache: true
    state: present

- name: Install Dockers official GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    owner: root
    group: root
    mode: "0444"

- name: Add Docker's repo
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_facts.distribution_release }} stable"

- name: Install Docker
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Disable systemwide Docker daemon for rootless
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop:
    - docker.service
    - docker.socket
    - containerd.service

- name: Docker Rootless User Environment
  ansible.builtin.copy:
    src: docker-rootless.sh
    dest: /etc/profile.d/docker-rootless.sh
    owner: root
    group: root
    mode: "0755"

- name: Creates Needed Folders in Users Home
  ansible.builtin.file:
    path: "{{ fact_docker_rootless_user.home }}/{{ item }}"
    state: directory
    owner: "{{ fact_docker_rootless_user.name }}"
    group: "{{ fact_docker_rootless_user.group }}"
    mode: "0750"
  loop:
    - ".config"
    - ".config/docker"
    - ".config/systemd"
    - ".config/systemd/user"

- name: Docker Daemon Configuration File
  ansible.builtin.copy:
    src: "daemon.json"
    dest: "{{ fact_docker_rootless_user.home }}/.config/docker/daemon.json"
    owner: "{{ fact_docker_rootless_user.name }}"
    group: "{{ fact_docker_rootless_user.group }}"
    mode: "0640"
  notify: Restart Docker Service

- name: Systemd Service
  ansible.builtin.copy:
    src: "docker.service"
    dest: "{{ fact_docker_rootless_user.home }}/.config/systemd/user/docker.service"
    owner: "{{ fact_docker_rootless_user.name }}"
    group: "{{ fact_docker_rootless_user.group }}"
    mode: "0640"
  notify: Restart Docker Service

- name: Enable and start service
  become_user: "{{ fact_docker_rootless_user.name }}"
  ansible.builtin.systemd_service:
    name: docker
    scope: user
    state: started
    enabled: true
